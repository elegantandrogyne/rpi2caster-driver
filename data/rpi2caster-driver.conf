# [InterfaceXYZ]
# Per-interface settings.
#
# Define as many interface sections as you like;
# typically up to 4 interfaces are supported per Raspberry Pi
# (each one of them uses two MCP23017 chips, and there can be max 8 of them
# on a single I2C bus).
#
# Each interface will be available on a separate URL:
# http://[host:port]/interfaces/[interface_suffix],
# where interface suffix is the section name without the "Interface" part.
# The suffix will be converted to lowercase.
#
# sensor_gpio: GPIO pin for machine cycle sensor
# i2c_bus: I2C bus number
# mcp0: 1st MCP23017 address
# mcp1: 2nd MCP23017 address
# signals: signals sequence, from MCP0 GPA0 to MCP1 GPB7
# supported_modes: operation modes supported by this interface
#     (0: testing, 1: casting, 2: punching)
#     limiting this to casting or punching only will disable the other mode from being used
# supported_row16_modes: row 16 addressing modes supported by this interface and caster
#     (0: off, 1: HMN, 2: KMN, 3: unit-shift)
#     the software will adjust the incoming signal combination based on this mode
#     this does not affect the testing or punching mode, where all modes are available
# casting_startup_timeout: time (per cycle) before machine stop exception occurs
#     when starting to cast and checking if the machine is turning
# casting_sensor_timeout: time (for sensor ON and OFF) before the driver
#     raises a machine stop exception during casting
# casting_pump_stop_timeout: time (for sensor ON and OFF) to wait when attempting
#     to stop the pump (slower, as the operator often turns the machine by hand then)
# punching_on_time: how long to keep the air flowing during punching,
# punching_off_time: how long to wait for the punches to fall and ribbon to advance

[Interface0]
sensor_gpio = 17
i2c_bus = 1
mcp0 = 0x20
mcp1 = 0x21
signals = N,M,L,K,J,I,H,G,F,S,E,D,0075,C,B,A,1,2,3,4,5,6,7,8,9,10,11,12,13,14,0005,O15
supported_modes = 0, 1, 2
supported_row16_modes = 0, 1, 2, 3
casting_startup_timeout = 30
casting_sensor_timeout = 5
casting_pump_stop_timeout = 120
punching_on_time = 0.2
punching_off_time = 0.3



[Control]
# General settings, affecting all interfaces and the daemon behavior.
#
# sensor: which sensor driver to use (rpi_gpio or sysfs)
# output: which output driver to use (smbus or wiringpi)
# led_gpio: "ready" LED GPIO #
# shutdown_gpio: shutdown button GPIO #
# reboot_gpio: reboot button GPIO #
# input_bounce_time: debounce time for GPIO inputs
#     (pulses shorter than that will be ignored and won't trigger action)
# host: address (DNS or IP) the HTTP server will listen on
# port: port to listen on

sensor = rpi_gpio
output = smbus
led_gpio=18
shutdown_gpio=24
reboot_gpio=23
input_bounce_time=25
host=127.0.0.1
port=23017
